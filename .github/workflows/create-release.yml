# .github/workflows/create-release.yml

name: Create Release and Upload Binaries

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    name: Build for ${{ matrix.friendly_name }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # --- Windows 10/11 ---
          - os: windows-latest
            python-version: '3.9'
            friendly_name: Windows 10/11
            asset_name: PDF Stitcher-windows-x64.exe

          # --- Windows 7 兼容版 ---
          - os: windows-2022
            python-version: '3.8' # Python 3.8 是最后一个支持 Win7 的版本
            friendly_name: Windows 7 Compatible
            asset_name: PDF Stitcher-windows-x86_64-win7-compatible.exe

          # --- macOS ---
          - os: macos-latest
            python-version: '3.9'
            friendly_name: macOS
            asset_name: PDF Stitcher-macos

          # --- Linux ---
          - os: ubuntu-latest
            python-version: '3.9'
            friendly_name: Linux
            asset_name: PDF Stitcher-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller on ${{ matrix.os }}
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            SEPARATOR=";"
          else
            SEPARATOR=":"
          fi
          
          pyinstaller --name "${{ matrix.asset_name }}" \
                      --onefile \
                      --windowed \
                      --icon=assets/logo_6.ico \
                      --add-data "assets${SEPARATOR}assets" \
                      main.py

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream